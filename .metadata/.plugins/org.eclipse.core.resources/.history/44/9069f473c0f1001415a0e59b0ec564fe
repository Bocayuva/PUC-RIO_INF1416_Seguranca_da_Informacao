package main.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import main.business.LogView;
import main.jdbc.ConnectionFactory;

public class LogViewDao {

	private Connection connection;
	
    public LogViewDao() {
		   this.connection = new ConnectionFactory().getConnection();
	}
    
    public List<LogView> buscarTodos() {
		List<LogView> lgItens = new ArrayList<LogView>();
		String sql ="select num_controle from registros " + 
					"group by num_controle";
		try {
            // prepared statement para inserção
            PreparedStatement stmt = connection.prepareStatement(sql);
            ResultSet res = stmt.executeQuery();
            
            while (res.next()) {
            	LogView lgItem = new LogView();
            	lgItem.setNum_controle(res.getInt("num_controle"));
            	lgItens.add(lgItem);
			}
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
		return lgItens;
	}

	public List<LogView> buscarPorControle(int num_controle2) {
		List<LogView> lgItens = new ArrayList<LogView>();
		String sql ="select msg_text, login_name, arq_name from registros r "+
					"left outer join usuarios u on r.id_user_fk = u.id "+
					"left outer join mensagens m on r.id_msg_fk = m.id "+
					"where r.num_controle = ?";
		try {
            // prepared statement para inserção
            PreparedStatement stmt = connection.prepareStatement(sql);
            stmt.setInt(1, num_controle2);
            ResultSet res = stmt.executeQuery();
            
            while (res.next()) {
            	LogView lgItem = new LogView();
            	lgItem.setMensagem(res.getString("msg_text"));
            	lgItem.setArq_name(res.getString("arq_name"));
            	lgItem.setLogin_name(res.getString("login_name"));
            	lgItens.add(lgItem);
			}
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
		return lgItens;
	}
}
