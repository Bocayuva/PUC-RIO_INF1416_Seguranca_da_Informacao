package main.java;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.io.File;
import java.security.Key;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;
import javax.swing.border.BevelBorder;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.text.TabExpander;

import main.business.Registros;
import main.business.Usuario;
import main.helper.FileCript;
import main.helper.FileUnitCript;
import main.helper.Utility;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class ConsultaPasta{

	private Usuario usuario;
	private JFrame frame;
	private JPanel allPane;
	
	public ConsultaPasta(Usuario fusuario, JFrame fframe) {
		
		usuario = fusuario;
		frame   = fframe;
		
		frame.setBounds(100,100,600, 510);
		frame.getContentPane().removeAll();		
		
		Registros.adicionarRegistro(new int[]{7001} , new Usuario[]{usuario}, new String[]{null});
		
		allPane = new JPanel();
		frame.setContentPane(allPane);
		
		montaCabecalho();
		montaCorpo1();
		montaFormConsulta();
				
		rebuildFrame();
		
	}
	
	private void montaCorpo1() {
		allPane.setLayout(null);
		JPanel corpo1 = new JPanel();
		corpo1.setBackground(new Color(255, 255, 224));
		corpo1.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
		corpo1.setLocation(12, 113);
		corpo1.setSize(569, 34);
		corpo1.setLayout(null);
		
		JLabel lbTotalAcessos = new JLabel("Total de consultas do usuÃ¡rio: " + usuario.getNum_consultas());
		lbTotalAcessos.setBounds(12, 12, 402, 15);
		corpo1.add(lbTotalAcessos);
		
		allPane.add(corpo1);
	}

	private void montaCabecalho() {
		JPanel cabecalho = Cabecalho.MontaCabecalho(usuario);
		allPane.add(cabecalho);				
	}

	public void montaFormConsulta() {
		
		JPanel formConsulta = new JPanel();		
		formConsulta.setBackground(new Color(255, 255, 224));
		formConsulta.setBorder(new BevelBorder(BevelBorder.RAISED, null, null, null, null));
		formConsulta.setBounds(12, 159, 569, 308);
		formConsulta.setLayout(null);
		
		JLabel lbMenu = new JLabel("Consulta pasta");
		lbMenu.setBounds(12, 5, 402, 15);
		formConsulta.add(lbMenu);
		
		JLabel lblCamin = new JLabel("Caminho da chave privada: ");
		lblCamin.setBounds(12, 27, 402, 15);
		formConsulta.add(lblCamin);
		
		final JTextField txtKeyPriv = new JTextField();
		txtKeyPriv.setBounds(12, 43, 484, 25);
		txtKeyPriv.setEnabled(false);
		formConsulta.add(txtKeyPriv);
		
		JButton btnChooseFile = new JButton("->");
		btnChooseFile.setBounds(508, 43, 49, 25);
		btnChooseFile.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				JFileChooser chooser = new JFileChooser();
				chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
				int result = chooser.showOpenDialog(frame);
				if (result == JFileChooser.APPROVE_OPTION) {
				    File selectedFile = chooser.getSelectedFile();
				    txtKeyPriv.setText( selectedFile.getAbsolutePath());
				}
				
			}
		});
		formConsulta.add(btnChooseFile);
		
		JLabel lbFraseSecreta = new JLabel("Frase secreta: ");
		lbFraseSecreta.setBounds(12, 69, 402, 15);
		formConsulta.add(lbFraseSecreta);
		
		final JTextField txtFraseSecreta = new JTextField();
		txtFraseSecreta.setBounds(12, 85, 545, 25);
		formConsulta.add(txtFraseSecreta);
		
		JLabel lbCamihoPasta = new JLabel("Caminho da pasta: ");
		lbCamihoPasta.setBounds(12, 110, 402, 15);
		formConsulta.add(lbCamihoPasta);
		
		final JTextField txtCaminhoPasta = new JTextField();
		txtCaminhoPasta.setBounds(12, 127, 484, 25);
		txtCaminhoPasta.setEnabled(false);
		formConsulta.add(txtCaminhoPasta);
		
		JButton btnChoosePasta = new JButton("->");
		btnChoosePasta.setBounds(508, 127, 49, 25);
		btnChoosePasta.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				JFileChooser chooser = new JFileChooser();
				chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
				chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
				int result = chooser.showOpenDialog(frame);
				if (result == JFileChooser.APPROVE_OPTION) {
				    File selectedFile = chooser.getSelectedFile();
				    txtCaminhoPasta.setText( selectedFile.getAbsolutePath());
				}
				
			}
		});
		formConsulta.add(btnChoosePasta);
				
		final TableModel modeloTable = new TableModel();
	    final JTable table           = new JTable(modeloTable);
		table.setBounds(12, 164, 402, 108);
		
		final JScrollPane scrollpane = new JScrollPane(table); 
		scrollpane.setBounds(12, 164, 545, 94);
		scrollpane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS); 
		scrollpane.setVisible(false);
		
		table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		TableColumn tbColum = null;
		tbColum = table.getColumnModel().getColumn(0);
		tbColum.setPreferredWidth(250);
		tbColum = table.getColumnModel().getColumn(1);
		tbColum.setPreferredWidth(250);
		tbColum = table.getColumnModel().getColumn(2);
		tbColum.setPreferredWidth(100);
		
		table.addMouseListener(new MouseAdapter(){
			
			@Override
			public void mouseClicked(java.awt.event.MouseEvent evt) {
		        int row = table.rowAtPoint(evt.getPoint());
		        int col = table.columnAtPoint(evt.getPoint());
		        
		        if (row >= 0 && col == 0) {
		           FileUnitCript item = modeloTable.getRow(row);
		           String arq_name = item.getNomeCodigo();
		           if (item.checarAutenticidadeIntegridade()) {
		        	   try {
		        		   item.decriptoFile();
		        	   } catch (Exception e) {
		        		   Registros.adicionarRegistro(new int[]{7012} , new Usuario[]{usuario}, new String[]{arq_name});
		        	   }
		           }else{
		        	   Registros.adicionarRegistro(new int[]{7012} , new Usuario[]{usuario}, new String[]{null});
		           }
		        }
		    }
			
		});
		
		
		JButton btnListar = new JButton("Listar");
		btnListar.setBounds(12, 270, 147, 25);
		btnListar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				Registros.adicionarRegistro(new int[]{7003} , new Usuario[]{usuario}, new String[]{null});
				
				FileCript fCript = new FileCript();				
				
				try{
					fCript.setFolderUrl(txtCaminhoPasta.getText());
				}catch(Exception e){
					Registros.adicionarRegistro(new int[]{7006} , new Usuario[]{usuario}, new String[]{null});
				}
				
				try{
					fCript.setKeyphrase(txtFraseSecreta.getText());		
				}catch(Exception e){
					Registros.adicionarRegistro(new int[]{7005} , new Usuario[]{usuario}, new String[]{null});
				}
						
				try {
					fCript.setPrivateKey(txtKeyPriv.getText());
				} catch (Exception e) {
					Registros.adicionarRegistro(new int[]{7004} , new Usuario[]{usuario}, new String[]{null});
				}
				
				fCript.setSymKey();
				
				
				
				fCript.setPubKey(usuario);
				if (fCript.checarAutenticidadeIntegridade()) {
					
					try {
						modeloTable.removeAll();
						fCript.decriptaArquivo();
						List<FileUnitCript> fileUList = fCript.MontaGrid();
						modeloTable.setList(fileUList);
						for (int i = 0; i < fileUList.size(); i++) {
							modeloTable.addValue(fileUList.get(i));
							
						}				
						Registros.adicionarRegistro(new int[]{7007} , new Usuario[]{usuario}, new String[]{null});
						scrollpane.setVisible(true);
						scrollpane.repaint();
						
					} catch (Exception e) {
						e.printStackTrace();
					}
					
				}else{
					
				}
				
			}
		});
		formConsulta.add(btnListar);		
		formConsulta.add(scrollpane, BorderLayout.CENTER);
		
		JButton btnMenu = new JButton("Menu principal");
		btnMenu.setBounds(403, 270, 154, 25);
		btnMenu.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent arg0) {
				Registros.adicionarRegistro(new int[]{7002} , new Usuario[]{usuario}, new String[]{null});
				MenuPrincipal menu = new MenuPrincipal(usuario, frame);
				return;
			}
		});
		allPane.setLayout(null);
		formConsulta.add(btnMenu);
		
		allPane.add(formConsulta);
				
	}
	
	private void rebuildFrame(){
		frame.revalidate();
		frame.repaint();
	}
}
